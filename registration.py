import windows #импортирование модуля содержащего окна и само приложение
import sqlite3 #импортирование библиотеки для работы с БД

first = True # переменная, отслеживающая в первый ли раз было открыто окно, для предотвращения дублирования привязки функций
def opened(): # функция обработчик окна
    active_win = windows.wins[0][0] # записываем активное окно в переменную для упрощения последующих взаимодействий

    # скрывает уведомления, которые будут показаны только при необходимости
    active_win.Zanyat.hide() # уведомление о том что логин занят
    active_win.Nesovpaw.hide() # уведомление о том что при введении повтора пароля он не совпал с первоначальным
    active_win.EmptyLog.hide() # уведомление о том что логин не может быть пустым
    active_win.EmptyPass.hide() # уведомление о том что пароль не может быть пустым
    
    global first
    if first: # в случае если окно открыто в первый раз, настраивает работу кнопок
        active_win.Reg.clicked.connect(regs) # привязывает функцию обработчик regs к к кнопке Reg
        active_win.Vhod.clicked.connect(open_vhod) # привязывает функцию обработчик open_vhod к к кнопке Vhod
        first = False # запоминаем что окно уже открывалось, следовательно в следующий раз не будем привязывать функции, т.к. они уже привязанны

def regs(): # функция срабатывающая при нажатии на кнопку регистрации (Reg) 
    ok = True # переменная показывающая подходят текущие данные для регистрации или нет
    connection = sqlite3.connect('kirieshki.db') # подключение БД
    cursor = connection.cursor() # создание "курсора" - необходим для ввода SQL запросов к БД
    cursor.execute('SELECT Login FROM users') # создание запроса на получение всех зарегистрированных в БД логинов
    users = [i[0] for i in cursor.fetchall()] # выполнение запроса созданного строкой выше и запись его результата в переменную
    connection.close() # отключение БД

    if windows.wins[0][0].Login.text() in users: # проверка на занятость логина
        # если логин занят запрещает регистрацию и сообщает об этом
        ok = False
        windows.wins[0][0].Zanyat.show()
    else:
        # если все в порядке разрешает регистрацию и скрывает уведомление
        ok = True
        windows.wins[0][0].Zanyat.hide()

    if windows.wins[0][0].Password.text() != windows.wins[0][0].Password_repeat.text(): # проверяет совпадение паролей
        # в случае не совпадения запрещает регистрацию и уведомляет об этом
        ok = False
        windows.wins[0][0].Nesovpaw.show()
    else:
        # если все в порядке разрешает регистрацию и скрывает уведомление
        ok = ok and True # используется конструкция "ok and True" чтобы учитывать предыдущее сотояние, т.е. если регистрация была запрещена следующие проверки не смогут ее разрешить
        windows.wins[0][0].Nesovpaw.hide()

    if windows.wins[0][0].Login.text() == '': # проверка что поле логина не пустое 
        # если поле пустое запрещает регистрацию и сообщает об этом
        windows.wins[0][0].EmptyLog.show()
        ok = False
    else:
        # если все в порядке разрешает регистрацию и скрывает уведомление
        windows.wins[0][0].EmptyLog.hide()
        ok = ok and True # используется конструкция "ok and True" чтобы учитывать предыдущее сотояние, т.е. если регистрация была запрещена следующие проверки не смогут ее разрешить

    if windows.wins[0][0].Password.text() == '': # проверяет что поле пароля не пустое
        # если поле пустое запрещает регистрацию и сообщает об этом
        windows.wins[0][0].EmptyPass.show()
        ok = False
    else:
        # если все в порядке разрешает регистрацию и скрывает уведомление
        windows.wins[0][0].EmptyPass.hide()
        ok = ok and True # используется конструкция "ok and True" чтобы учитывать предыдущее сотояние, т.е. если регистрация была запрещена следующие проверки не смогут ее разрешить

    if ok: # если все условия соблюдены происходит регистрация
        connection = sqlite3.connect('kirieshki.db') # подключение БД
        cursor = connection.cursor() # содание "курсора" - для запросов 
        # выполнение запроса на создание записи о пользователе
        cursor.execute('INSERT INTO users (Login, Password, Click_score, in_game_time) VALUES (?, ?, ?, ?)', (windows.wins[0][0].Login.text(),windows.wins[0][0].Password.text(),0,0))
        connection.commit() # выполнение запроса
        connection.close() # отключение БД

        windows.wins[0][0].hide() # скрытие текущего окна
        windows.wins[1][0].show() # открытие окна входа
        windows.wins[1][1](windows.wins[0][0].Login.text()) # вызов функции обработчика окна входа (также передает логин, чтобы пользователью не пришлось его заново вводить)

def open_vhod(): # функция обработчик кнопки перехода к окну входа
    windows.wins[0][0].hide() # скрытие текущего окна
    windows.wins[1][0].show() # открытеи окна входа
    windows.wins[1][1]() # вызов функуции обработчика окна входа